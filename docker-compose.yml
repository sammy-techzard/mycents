version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env.example
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.production

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env.example
    volumes:
      - frontend_build:/usr/share/nginx/html
    ports:
      - "3000:80"
    depends_on:
      - backend
    command: sh -c "npm run build && cp -R build/* /usr/share/nginx/html"

  db:
    image: postgres:15
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: mycents_user
      POSTGRES_PASSWORD: mycents_password
      POSTGRES_DB: mycents_db

volumes:
  static_volume:
  media_volume:
  db_data:
  frontend_build:
